{
   "AWSTemplateFormatVersion": "2010-09-09",
   "Description": "Setup CSS project",
   "Parameters": {
    "CodeBucketName": {
      "Type": "String",
      "Description":"Project Libraries and project folder",
      "Default": "css-exercise project storage"
    },
    "CloudWatchEventBucketName": {
      "Type": "String",
      "Description": "Json file location"
    }
   },
   "Resources": {
	  "CodeCommitRepository": {
         "Type": "AWS::CodeCommit::Repository",
         "DeletionPolicy": "Retain",
         "Properties": {
            "Code": {
              "S3": {
                "Bucket": {"Ref": "CodeBucketName"},
                "Key": "repo.zip"
              }
            },
            "RepositoryName": "css-project-repo",
            "RepositoryDescription": "Sample Repo Description",
            "Triggers": [
              {
                "Branches": ["master"],
                "DestinationArn": {
                  "Fn::GetAtt": ["CodeBuildLambda", "Arn"]
                },
                "CustomData": "css-project",
                "Events": [
                  "all"],
                "Name": "master push trigger"
              }
            ]
         }
      },
      "CodeBuildProject": {
        "DependsOn": ["CodeBuildRole", "CodeCommitRepository"],
         "Type": "AWS::CodeBuild::Project",
         "Properties": {
            "Artifacts": {
               "Type": "NO_ARTIFACTS"
            },
            "Environment": {
               "ComputeType": "BUILD_GENERAL1_SMALL",
               "Image": "aws/codebuild/python:3.6.5",
               "Type": "LINUX_CONTAINER"
            },
            "Name": "css-project",
            "ServiceRole": {
              "Fn::GetAtt": ["CodeBuildRole","Arn"]
            },
            "Source": {
               "Type": "CODECOMMIT",
               "Location": {
                "Fn::GetAtt": ["CodeCommitRepository", "CloneUrlHttp"]
               }
            }
         }
      },
      "CodeBuildPolicy": {
        "DependsOn": ["CodeBuildRole"],
        "Type": "AWS::IAM::Policy",

        "Description": "Setting IAM policy for service role for CodeBuild",
        "Properties": {
           "PolicyDocument": {
              "Statement": [
                 {
                    "Action": [
                       "logs:CreateLogGroup",
                       "logs:CreateLogStream",
                       "logs:PutLogEvents",
                       "codecommit:*",
                       "s3:*"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                 }
              ]
           },
           "PolicyName": "CodeBuildPolicy",
           "Roles": [
              {
                "Ref": "CodeBuildRole"
              }
           ]
        }   
      },
      "S3BucketResource": {
        "Type": "AWS::S3::Bucket",
        "DeletionPolicy": "Retain",
        "Properties": {
          "VersioningConfiguration": {
            "Status": "Enabled"
          },
          "BucketName": {
              "Ref": "CloudWatchEventBucketName"
          }
          }
      },
      "CodeBuildEventRule": {
        "DependsOn": ["CodeBuildProject", "LambdaFunction"],
         "Type": "AWS::Events::Rule",
         "Properties": {
            "Description": "Trigger for failed or successful build",
            "EventPattern": {
               "source": [
                  "aws.codebuild"
               ],
               "detail-type": [
                  "CodeBuild Build State Change"
               ],
               "detail": {
                  "build-status": [
                     "BUILD FAILED",
                     "BUILD SUCCESSFUL"
                  ],
                  "project-name": [
                     "css-project"
                  ]
               }
            },
            "State": "ENABLED",
            "Targets": [
               {
                  "Arn": {
                    "Fn::GetAtt": ["LambdaFunction", "Arn"]
                  },
                  "Id": "lambda-event-target"
               }
            ]
         }
      },
      "PermissionForEventsToInvokeLambda": {
        "DependsOn": ["LambdaFunction"],
         "Type": "AWS::Lambda::Permission",
         "Properties": {
            "FunctionName": "CodeBuildResultFuction",
            "Action": "lambda:InvokeFunction",
            "Principal": "events.amazonaws.com"         
          }
      },
      "PermissionForCCToInvokeLambda": {
          "DependsOn": ["CodeBuildLambda"],
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": "CodeBuildTriggerFunction", 
            "Action": "lambda:InvokeFunction", 
            "Principal": "codecommit.amazonaws.com"
        }
      },
      "LambdaPolicy": {
        "DependsOn": ["LambdaRole"],
        "Type": "AWS::IAM::Policy",

        "Description": "Setting IAM policy for service role for Lambda",
        "Properties": {
           "PolicyDocument": {
              "Statement": [
                 {
                    "Action": [
                       "s3:PutObject",
                       "logs:CreateLogGroup",
                       "logs:CreateLogStream",
                       "logs:PutLogEvents",
                       "codebuild:StartBuild"
                    ],
                    "Effect": "Allow",
                    "Resource": "*"
                 }
              ]
           },
           "PolicyName": "LambdaPolicy",
           "Roles": [
              {
                "Ref": "LambdaRole"
              }
           ]
        }   
      },
       "CodeBuildRole": {
           "Type": "AWS::IAM::Role",
          "Description": "Creating service role in IAM for AWS CodeBuild",
          "Properties": {
             "AssumeRolePolicyDocument": {
                "Statement": [
                   {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                         "Service": "codebuild.amazonaws.com"
                      }
                   }
                ]
             },
             "Path": "/"
          }
      },
      "LambdaRole": {
           "Type": "AWS::IAM::Role",
          "Description": "Creating service role in IAM for AWS Lambda",
          "Properties": {
             "AssumeRolePolicyDocument": {
                "Statement": [
                   {
                      "Action": "sts:AssumeRole",
                      "Effect": "Allow",
                      "Principal": {
                         "Service": "lambda.amazonaws.com"
                      }
                   }
                ]
             },
             "Path": "/"
          }
      },
      "LambdaFunction": {
        "DependsOn": ["LambdaRole"],
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
              "S3Bucket": {"Ref": "CodeBucketName"},
              "S3Key": "lambda.zip"
          },
          "FunctionName": "CodeBuildResultFuction",
          "Handler": "index.handler",
          "Role": {
            "Fn::GetAtt": ["LambdaRole","Arn"]

          },
          "Environment": {
            "Variables": {
              "BUCKET_NAME":  {
                  "Ref": "CloudWatchEventBucketName"
                  }
              }
          }, 
          "Runtime": "python3.7",
          "Timeout": 30
        }
      },
      "CodeBuildLambda": {
        "DependsOn": ["LambdaRole"],
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
              "S3Bucket": {"Ref": "CodeBucketName"},
              "S3Key": "codebuild.zip"
          },
          "FunctionName": "CodeBuildTriggerFunction",
          "Handler": "index.handler",
          "Role": {
            "Fn::GetAtt": ["LambdaRole","Arn"]

          },
          "Runtime": "python3.7",
          "Timeout": 30
        } 
      }

   }
}
